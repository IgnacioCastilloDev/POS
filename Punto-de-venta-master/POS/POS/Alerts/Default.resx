<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WMAAAAAASUVORK5CYII=
</value>
  </data>
</root>